<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Showcase Template Group</title><link>https://computacionvisualgrupo.github.io/showcase/docs/primer-corte/</link><description>Recent content on Showcase Template Group</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://computacionvisualgrupo.github.io/showcase/docs/primer-corte/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://computacionvisualgrupo.github.io/showcase/docs/primer-corte/extractor-de-pinturas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://computacionvisualgrupo.github.io/showcase/docs/primer-corte/extractor-de-pinturas/</guid><description>Extractor de colores Winsor &amp;amp; newton # by FredyRosero
Este sketch de P5 posteriza la imagen para limitar 4 colores por canal. Luego agrega el valor RGB de cada pixel sin repetir a una lista que luego aproximara a otros valores RGB que se &amp;ldquo;aproximan&amp;rdquo; a los colores de las pinturas de óleo Winsor &amp;amp; newton &amp;ldquo;Artists&amp;rsquo; Oil Colour&amp;rdquo; extraidos de https://color-term.com/winsornewton-colors/
El diccionario de colores /showcase/sketches/colores.json se generó con el siguiente scrapper de python:</description></item><item><title/><link>https://computacionvisualgrupo.github.io/showcase/docs/primer-corte/pixelator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://computacionvisualgrupo.github.io/showcase/docs/primer-corte/pixelator/</guid><description>P5 PIXELATOR # By: Sergio Camilo Espinosa
Este código carga una imagen y le permite al usuario cambiar entre la imagen original y una versión pixelada de la misma.
En la función setup(), se crea un lienzo de 500x500 píxeles y se carga una imagen previamente cargada. También se crea un control deslizante (rSlider) que permite al usuario cambiar el tamaño de los píxeles en la versión pixelada y un menú desplegable (sel) que permite al usuario seleccionar entre la imagen original y la versión pixelada.</description></item><item><title/><link>https://computacionvisualgrupo.github.io/showcase/docs/primer-corte/Spiral/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://computacionvisualgrupo.github.io/showcase/docs/primer-corte/Spiral/</guid><description>Spiral # by Harold Velazco - UNAL 2023
Este código utiliza el lenguaje de programación JavaScript y la biblioteca p5.js para crear una animación de una espiral en la pantalla.
Primero, se declaran algunas variables como &amp;ldquo;dist_centro&amp;rdquo;, &amp;ldquo;cercania&amp;rdquo; y &amp;ldquo;SPIRAL_SIZE&amp;rdquo; que se utilizarán más adelante en el código.
Luego se define la función &amp;ldquo;setup()&amp;rdquo;, que es un método que se ejecuta una vez al comienzo del programa y se encarga de establecer la configuración inicial.</description></item><item><title/><link>https://computacionvisualgrupo.github.io/showcase/docs/primer-corte/texturing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://computacionvisualgrupo.github.io/showcase/docs/primer-corte/texturing/</guid><description>Texturing # by Harold Velazco - UNAL 2023
Este código utiliza el lenguaje de programación JavaScript y la biblioteca p5.js para crear una animación de una espiral en la pantalla.</description></item></channel></rss>